pipeline {
    agent any
    
    tools{
        maven 'Maven' 
    }

    environment {
        DOCKER_HUB = credentials('DOCKER_HUB')
    }
    
    stages {
        stage('Build') {
            steps {
                // Get some code from a GitHub repository
                git 'https://github.com/dmunoz166/docker_book'

                // Run Maven on a Unix agent.
                sh "mvn clean compile package -Dmaven.test.skip=true"

                // To run Maven on a Windows agent, use
                // bat "mvn -Dmaven.test.failure.ignore=true clean package"
            }

            post {
                // If Maven was able to run the tests, even if some of the test
                // failed, record the test results and archive the jar file.
                success {
                    archiveArtifacts 'target/*.jar'
                }
            }
        }
        stage('Análisis de código'){
            steps{
                sh "mvn sonar:sonar"
            }
        }
        stage('Construcción de imagen'){
            steps{
                sh 'echo "Login DockerHub"'
                sh ("docker login --username $DOCKER_HUB_USR --password $DOCKER_HUB_PSW")
                sh 'echo "Construyendo Imagen App"'
                sh 'docker build -t kattyleja/docker_book:1 .'
                sh 'docker push kattyleja/docker_book:1'
                sh 'echo "Construyendo Imagen DB"'
                sh "docker build -t kattyleja/docker_db:1 ./db/"
                sh "docker push kattyleja/docker_db:1"
            }
        }
        stage('Despliegue K8S'){
            steps{
                sh 'pwd'
                sh 'echo "Desplegando a Cluster k8s 3HTP"'
                sh 'export KUBECONFIG=/home/jenkins/config && kubectl version && kubectl apply -f ./manifiestos/ && kubectl get po -n jenkins'
            }
        }
    }
}