pipeline {
    agent any
    
    tools{
        maven 'Maven' 
    }

    environment {
        DOCKER_HUB = credentials('DOCKER_HUB')
    }
    
    stages {
        stage('Build') {
            steps {
                // Get some code from a GitHub repository
                git 'https://github.com/dmunoz166/docker_book'

                // Run Maven on a Unix agent.
                sh "mvn clean compile package -Dmaven.test.skip=true"

                // To run Maven on a Windows agent, use
                // bat "mvn -Dmaven.test.failure.ignore=true clean package"
            }

            post {
                // If Maven was able to run the tests, even if some of the test
                // failed, record the test results and archive the jar file.
                success {
                    archiveArtifacts 'target/*.jar'
                }
            }
        }
        stage('Análisis de código'){
            steps{
                sh "mvn sonar:sonar"
            }
        }
        stage('Construcción de imagen'){
            steps{
                sh 'echo "Login DockerHub"'
                sh ("docker login --username $DOCKER_HUB_USR --password $DOCKER_HUB_PSW")
                sh 'echo "Construyendo Imagen App"'
                sh 'docker build -t kattyleja/docker_book:1 .'
                sh 'docker push kattyleja/docker_book:1'
                sh 'echo "Construyendo Imagen DB"'
                sh "docker build -t kattyleja/docker_db:1 ./db/"
                sh "docker push kattyleja/docker_db:1"
            }
        }
        stage('Despliegue K8S'){
            steps{
            step([$class: 'UCDeployPublisher',
                siteName: 'urban-jenkins',
                component: [
                    $class: 'com.urbancode.jenkins.plugins.ucdeploy.VersionHelper$VersionBlock',
                    componentName: 'dmunoz-k8s',
                    delivery: [
                        $class: 'com.urbancode.jenkins.plugins.ucdeploy.DeliveryHelper$Push',
                        pushVersion: '${BUILD_NUMBER}',
                        baseDir: '/var/lib/jenkins/workspace/Jenkinsfile-UCD/manifiestos',
                        fileIncludePatterns: '*',
                        fileExcludePatterns: '',
                        pushProperties: 'jenkins.server=Local\njenkins.reviewed=false',
                        pushDescription: 'Pushed from Jenkins',
                        pushIncremental: false
                    ]
                ]
            ])
            
            step([$class: 'UCDeployPublisher',
                siteName: 'urban-jenkins',
                deploy: [
                    $class: 'com.urbancode.jenkins.plugins.ucdeploy.DeployHelper$DeployBlock',
                    deployApp: 'dmunoz-k8s',
                    deployEnv: 'PROD 1',
                    deployProc: 'Deploy from YAML file',
                    deployVersions: 'dmunoz-k8s:${BUILD_NUMBER}',
                    deployOnlyChanged: false
                ]
            ])
            
            
            }
        }
    }
}

