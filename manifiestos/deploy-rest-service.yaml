---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  labels:
    app: service-rest
  name: service-rest
  namespace: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service-rest
  template:
    metadata:
      labels:
        app: service-rest
        version: ""
    spec:
      containers:
      - args:
        - java -jar /app/demo-docker-0.0.1-SNAPSHOT.jar --spring.config.location=/app/application.properties
        command:
        - /bin/sh
        - -c
        image: kattyleja/docker_book:1
        env:
          - name: LRQ
            value: "este es el valor"
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 240
          periodSeconds: 20
          successThreshold: 1
          tcpSocket:
            port: 8080
          timeoutSeconds: 1
        name: msdataauth
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          failureThreshold: 6
          initialDelaySeconds: 60
          periodSeconds: 30
          successThreshold: 1
          tcpSocket:
            port: 8080
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 300m
            memory: 1536Mi
          requests:
            cpu: 200m
            memory: 512Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /app/application.properties
          name: conf-volumen
          subPath: application.properties
        imagePullPolicy: IfNotPresent
        
        name: service-rest
        ports:
        - containerPort: 8080
          protocol: TCP
      restartPolicy: Always
      schedulerName: default-scheduler
      volumes:
      - configMap:
          items:
          - key: application.properties
            path: application.properties
          name: rest-service
        name: conf-volumen
